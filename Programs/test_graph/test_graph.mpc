from graph_plain import T, dijkstra_optimized as dijsktra_plain
from Compiler.mpc_graph_lib import dijkstra_optimized

local_T = sint(T)
print_ln("----------------------------------- Testing graph_lib  -----------------------------------")


class bcolors:
    HEADER = '\033[95m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'


def test(actual, expected):
    total_tests = cint.load_mem(3000)
    total_tests += 1
    total_tests.store_in_mem(3000)

    if_then(actual != expected)
    print_ln(bcolors.FAIL + 'FAILURE: expected %s, got %s' + bcolors.ENDC, expected, actual)
    failed_tests = cint.load_mem(6000)
    failed_tests += 1
    failed_tests.store_in_mem(6000)
    else_then()
    print_ln(bcolors.OKGREEN + "TEST: %s equals %s" + bcolors.ENDC, expected, actual)
    end_if()


def test_graph_path_4v4():
    actual = sint(1)
    expected = 1 
    test(actual.reveal(), expected)

test_graph_path_4v4()
  